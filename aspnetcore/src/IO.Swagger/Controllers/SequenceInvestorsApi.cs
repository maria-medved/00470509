/*
 * Sequence Bridge MS
 *
 * api to receive sequence UI actions and turn them into pengine events
 *
 * OpenAPI spec version: 1.0.0
 * Contact: pengine@vixion.nl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SequenceInvestorsApiController : ControllerBase
    { 
        /// <summary>
        /// this endpoint should be used from sequence when a new investor gets status &#x27;Enhance Investor Data&#x27;
        /// </summary>
        /// <remarks>receives document and process id of a new investor from sequence</remarks>
        /// <param name="documentId"></param>
        /// <param name="processId"></param>
        /// <response code="200">delivered ok</response>
        /// <response code="409">An Error occurred</response>
        [HttpPost]
        [Route("/SmartBear-CC/00470509_API/1.0.0/investorCreated")]
        [ValidateModelState]
        [SwaggerOperation("InvestorCreated")]
        [SwaggerResponse(statusCode: 409, type: typeof(ErrorResult), description: "An Error occurred")]
        public virtual IActionResult InvestorCreated([FromHeader][Required()]string documentId, [FromHeader][Required()]string processId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(ErrorResult));

            throw new NotImplementedException();
        }
    }
}
